packages:
  - knitr
  - tinytex
  - dplyr
  - tools 
  - xtable
  - mgcv # carbon 
  - raster # carbon
  - mixchar # traits
  - ade4 # traits
  - adephylo # traits
  - ape # traits
  - minpack.lm # traits
  - phytools # traits
  - vegan # traits
  - decaymod # decay 
  - rstan # decay
  - egg # decay
  - memisc # decay

sources:
  - 'chapters/Chapter2_carbon/R/prep_data.R'
  - 'chapters/Chapter2_carbon/R/stock_analysis.R'
  - 'chapters/Chapter2_carbon/R/manuscript_functions.R'
  - 'chapters/Chapter2_carbon/R/figures.R'
  - 'chapters/Chapter2_carbon/R/sites_map.R'
  - 'chapters/Chapter2_carbon/R/models.R'
  - 'chapters/Chapter3_traits/R/analyse_data.R'
  - 'chapters/Chapter3_traits/R/figures.R'
  - 'chapters/Chapter3_traits/R/load_data.R'
  - 'chapters/Chapter3_traits/R/manuscript_functions.R'
  - 'chapters/Chapter3_traits/R/tables.R'
  - 'chapters/Chapter5_decomp/R/decay_data.R'
  - 'chapters/Chapter5_decomp/R/figures.R'
  - 'chapters/Chapter5_decomp/R/tables.R'
  - 'chapters/Chapter5_decomp/R/model_analysis.R'
  - 'chapters/Chapter5_decomp/R/manuscript_functions.R'
  - 'chapters/Chapter5_decomp/R/get_deviance.R'

targets:
  all:
    depends:
      - carbon_figs
      - traits_figs
      - traits_tables
      - decomp_figs
      - decomp_tables
      - thesis.pdf

  carbon_figs:
    depends:
      - chapters/Chapter2_carbon/figs/aus_map.png
      - chapters/Chapter2_carbon/figs/site_map.png
      - chapters/Chapter2_carbon/figs/s_sites_depth.png
      - chapters/Chapter2_carbon/figs/stockmod_pairplot.png
      - chapters/Chapter2_carbon/figs/density_mod.png
      - chapters/Chapter2_carbon/figs/stock_mod_variables.png
      - chapters/Chapter2_carbon/figs/stock_mod_table.tex

  traits_figs:
    depends:
      - chapters/Chapter3_traits/figs/boxplot.png
      - chapters/Chapter3_traits/figs/pairplot.png
      - chapters/Chapter3_traits/figs/phylo_all.png
      - chapters/Chapter3_traits/figs/raw_pca.png
      - chapters/Chapter3_traits/figs/raw_tga_three.png
      - chapters/Chapter3_traits/figs/tga_ar.png
      - chapters/Chapter3_traits/figs/tga_at.png
      - chapters/Chapter3_traits/figs/tga_tda.png
      - chapters/Chapter3_traits/figs/tga_tdr.png
      - chapters/Chapter3_traits/figs/tga_pure.png
      - chapters/Chapter3_traits/figs/theory_plot.png
      - chapters/Chapter3_traits/figs/fs_simulate.png

  traits_tables:
    depends:
      - chapters/Chapter3_traits/figs/gen_bank_accessions.tex
      - chapters/Chapter3_traits/figs/mantel_results.tex
      - chapters/Chapter3_traits/figs/pca_loadings.tex
      - chapters/Chapter3_traits/figs/tga_param_table.tex
      - chapters/Chapter3_traits/figs/traits_table.tex

  decomp_figs:
    depends:
      - chapters/Chapter5_decomp/figs/mod_four.png
      - chapters/Chapter5_decomp/figs/sigma_sp.png
      - chapters/Chapter5_decomp/figs/mods_ar.png
      - chapters/Chapter5_decomp/figs/mods_at.png
      - chapters/Chapter5_decomp/figs/mods_tda.png
      - chapters/Chapter5_decomp/figs/mods_tdr.png
      - chapters/Chapter5_decomp/figs/a_plot.png
      - chapters/Chapter5_decomp/figs/kb_plot.png
      - chapters/Chapter5_decomp/figs/kb_cor_plot.png
      - chapters/Chapter5_decomp/figs/ab_cor_plot.png

  decomp_tables:
    depends: 
      - chapters/Chapter5_decomp/figs/deviance_median.tex
      - chapters/Chapter5_decomp/figs/short_deviance_median.tex
      - chapters/Chapter5_decomp/figs/species_parameters.tex

# ---------- carbon data --------------

  lab_data:
    command: process_lab_results(lab_data = I("chapters/Chapter2_carbon/data-raw/VWC_Lab_Results.csv"))   
    cleanup_level: purge
    check: exists

  samples:
    command: prepare_master_data(site_data = I("chapters/Chapter2_carbon/data-raw/VWC_SitesCores_Masterlist.csv"),
                               sample_data = I("chapters/Chapter2_carbon/data-raw/VWC_Samples_Masterlist.csv"),
                               wetland_types = I("chapters/Chapter2_carbon/data-raw/PC_carbon.csv"),
                               lab_data = lab_data)   
    cleanup_level: purge
    check: exists

  OCD_mod:
    command: ocd_gam(samples, simple = FALSE)   
    cleanup_level: purge
    check: exists

  var_core: 
    command: variance_component(OCD_mod, I(1))
    cleanup_level: purge
    check: exists

  var_site:
    command: variance_component(OCD_mod, I(2))
    cleanup_level: purge
    check: exists    

  OCD_mod_simple:
    command: ocd_gam(samples, simple = TRUE)   
    cleanup_level: purge
    check: exists

  stock_data_site:
    command: calculate_stock(samples, OCD_mod, I('site'))   
    cleanup_level: purge
    check: exists

  stock:
    command: combine_other_spatial(stock_data_site, 
                                 ala_file = I('chapters/Chapter2_carbon/data-raw/ALA_layers.csv'),
                                 catchments_file = I('chapters/Chapter2_carbon/data-raw/sites_with_catchment_data.csv'))   
    cleanup_level: purge
    check: exists

  spatial_stock:
    command: make_samples_spatial(stock, I('+proj=longlat +datum=WGS84 +no_defs'))   
    cleanup_level: purge
    check: exists

  sites_only:
    command: extract_sites(samples)   
    cleanup_level: purge
    check: exists

  spatial_sites:
    command: make_samples_spatial(sites_only, I('+proj=longlat +datum=WGS84 +no_defs'))   
    cleanup_level: purge
    check: exists

  model_df:
    command: create_model_df(spatial_stock)   
    cleanup_level: purge
    check: exists

  stock_covs:
    command: covs_only(model_df)   
    cleanup_level: purge
    check: exists

  stock_mod:
    command: stock_gam(model_df, re = I(TRUE))   
    cleanup_level: purge
    check: exists

  stock_mod_nore:
    command: stock_gam(model_df, re = I(FALSE))
    cleanup_level: purge
    check: exists

  cv_mod:
    command: cv(model_df)   
    cleanup_level: purge
    check: exists

# ---------- traits data -------------

  species:
    command: load_species(species_data = I("chapters/Chapter3_traits/data-raw/species.csv"))
    cleanup_level: purge
    check: exists

  carbon_nitrogen:
    command: load_leco_traits(leco_data = I("chapters/Chapter3_traits/data-raw/leco.csv"))
    cleanup_level: purge
    check: exists

  economic_traits:
    command: load_les_traits(trait_data = I("chapters/Chapter3_traits/data-raw/traits.csv"), 
                           species_data = species)
    cleanup_level: purge
    check: exists

  tga_output:
    command: tga_wrapper(species_data = species, 
                       function_name = I(tga_deconvolve), 
                       data_folder = I('chapters/Chapter3_traits/data-raw/tga/'),
                       ranseed = I(1))
    cleanup_level: purge
    check: exists

  biomass_traits: 
    command: load_tga_traits(tga_output)
    cleanup_level: purge
    check: exists

  raw_cl:
    command: single_deconvolve(I('chapters/Chapter3_traits/data-raw/raw_biomass/CL.csv'))
    cleanup_level: purge
    check: exists

  raw_lg:
    command: single_deconvolve(I('chapters/Chapter3_traits/data-raw/raw_biomass/LG.csv'))
    cleanup_level: purge
    check: exists

# ------- traits combine data -----------------

  combined_traits:
    command: traits_combine(species, carbon_nitrogen, economic_traits, biomass_traits)
    cleanup_level: purge
    check: exists

  mean_traits: 
    command: traits_mean_only(combined_traits)
    cleanup_level: purge
    check: exists

  logged_trait_matrix:
    command: traits_log(mean_traits)
    cleanup_level: purge
    check: exists

  pca_output:
    command: pca_data(logged_trait_matrix)
    cleanup_level: purge
    check: exists

  phylo_tree:
    command: phylo_readtree(I("chapters/Chapter3_traits/data-raw/phylo_tree.nwk"))
    cleanup_level: purge
    check: exists

  phylo_trts:
    command: phylo_traits(phylo_tree, mean_traits)
    cleanup_level: purge
    check: exists

  tga_params:
    command: extract_parameters(tga_output, species)
    cleanup_level: purge
    check: exists

# ---------- mixchar ------------


# --------- decomp data -----------

  decay:
    command: prepare_decay_data(initial_weight = I("chapters/Chapter5_decomp/data-raw/pre_weight.csv"),
                              removal_weight = I("chapters/Chapter5_decomp/data-raw/decomp_weight.csv"),
                              trait_data = mean_traits)
    cleanup_level: purge
    check: exists

  ne_cv_nore:
    command: readRDS(I('chapters/Chapter5_decomp/model_output/ne.cv.nore.rds'))
    cleanup_level: purge
    check: exists

  w_cv_nore:
    command: readRDS(I('chapters/Chapter5_decomp/model_output/w.cv.nore.rds'))
    cleanup_level: purge
    check: exists

  ne_nocv_re:
    command: readRDS(I('chapters/Chapter5_decomp/model_output/ne.nocv.re.rds'))
    cleanup_level: purge
    check: exists

  w_nocv_re:
    command: readRDS(I('chapters/Chapter5_decomp/model_output/w.nocv.re.rds'))
    cleanup_level: purge
    check: exists

# ------- decomp combine data ---------

  best_re_mod:
    command: best_re(I('N'), I('C'))
    cleanup_level: purge
    check: exists
  
  ne_sim_df:
    command: prep_sim_df(ne_nocv_re)
    cleanup_level: purge
    check: exists

  w_sim_df:
    command: prep_sim_df(w_nocv_re)
    cleanup_level: purge
    check: exists

  alphas:
    command: format_param(w_nocv_re, I('alpha_fit'))
    cleanup_level: purge
    check: exists
    
  betas:
    command: format_param(w_nocv_re, I('beta_fit'))
    cleanup_level: purge
    check: exists

  a_post:
    command: prep_post(w_nocv_re, decay, I('alpha'))
    cleanup_level: purge
    check: exists

  b_post:
    command: prep_post(w_nocv_re, decay, I('beta'))
    cleanup_level: purge
    check: exists

  k_post:
    command: prep_post(ne_nocv_re, decay, I('k'))
    cleanup_level: purge
    check: exists

  all_trait_models_median:
    command: get_deviance(I('chapters/Chapter5_decomp/'), fun = I('median'))
    cleanup_level: purge
    check: exists


# --------- carbon figures -------------

  chapters/Chapter2_carbon/figs/aus_map.png:
    command: aus_map(file_location = I('chapters/Chapter2_carbon/shapefiles/raw'))
    plot: 
      width: 800
      height: 1000
      bg: transparent

  chapters/Chapter2_carbon/figs/site_map.png:
    command: sites_map(spatial_sites, file_location = I('chapters/Chapter2_carbon/shapefiles/raw'))
    plot: 
      width: 800
      height: 800

  chapters/Chapter2_carbon/figs/s_sites_depth.png:
    command: spline_mod_plot(samples, OCD_mod)
    plot:
      width: 1200
      height: 450

  chapters/Chapter2_carbon/figs/stockmod_pairplot.png:
    command: pair_plot(stock_covs)
    plot:
      width: 1000
      height: 1000

  chapters/Chapter2_carbon/figs/density_mod.png:
    command: plot(OCD_mod, pages = I(1))
    plot:
  
  chapters/Chapter2_carbon/figs/stock_mod.png:
    command: plot(stock_mod, pages = I(1))
    plot:
  
  chapters/Chapter2_carbon/figs/stock_mod_variables.png:
    command: stock_mod_plot(model_df, stock_mod_nore)
    plot:
      width: 1200
      height: 1000

  chapters/Chapter2_carbon/figs/stock_mod_table.tex:
    command: gamtabs(stock_mod_nore, target_name)

# -------- trait figures -------------

  chapters/Chapter3_traits/figs/fs_simulate.png:
    command: simulate_fraser_suzuki()
    plot: 
      width: 800
      height: 700

  chapters/Chapter3_traits/figs/theory_plot.png:
    command: tga_theory_plots('chapters/Chapter3_traits/data-raw/TGA/A_TGA.csv')
    plot: 
      width: 1500
      height: 480

  chapters/Chapter3_traits/figs/raw_tga_three.png:
    command: tga_plot_three(tga_output, species, 
                          species_names = I(c('T', 'LL', 'KK')))
    plot: 
      width: 1500
      height: 500 

  chapters/Chapter3_traits/figs/tga_ar.png:
    command: tga_plot_ar(tga_output, species, gf = I('AR'))
    plot: 
      width: 1500
      height: 980

  chapters/Chapter3_traits/figs/tga_at.png:
    command: tga_plot_at(tga_output, species, gf = I('AT'))
    plot: 
      width: 1500
      height: 1940

  chapters/Chapter3_traits/figs/tga_tda.png:
    command: tga_plot_tda(tga_output, species, gf = I('Tda'))
    plot: 
      width: 1500
      height: 1460

  chapters/Chapter3_traits/figs/tga_tdr.png:
    command: tga_plot_tdr(tga_output, species, gf = I('Tdr'))
    plot: 
      width: 1500
      height: 980

  chapters/Chapter3_traits/figs/boxplot.png:
    command: box_plot(mean_traits)
    plot: 
      width: 1200
      height: 950

  chapters/Chapter3_traits/figs/raw_pca.png:
    command: pca(pca_output, logged_trait_matrix, species)
    plot: 
      width: 1000
      height: 950

  chapters/Chapter3_traits/figs/tga_pure.png:
    command: tga_raw_plots(raw_cl, raw_lg)
    plot: 
      width: 1200
      height: 600

  chapters/Chapter3_traits/figs/pairplot.png:
    command: pair_plot(logged_trait_matrix)
    plot: 
      width: 1500
      height: 1500

  chapters/Chapter3_traits/figs/phylo_all.png:
    command: phylo_plot(phylo_tree, phylo_trts)
    plot: 
      width: 1500
      height: 1000

# --------- ch 3 tables ---------

  chapters/Chapter3_traits/figs/tga_param_table.tex:
    command: tga_param_table(tga_params, target_name)

  chapters/Chapter3_traits/figs/traits_table.tex:
    command: traits_table(combined_traits, target_name)
  
  chapters/Chapter3_traits/figs/gen_bank_accessions.tex:
    command: phylo_accessions("chapters/Chapter3_traits/data-raw/GenBankAccessions.txt", target_name)

  chapters/Chapter3_traits/figs/mantel_results.tex:
    command: phylo_mantel(phylo_tree, phylo_trts, target_name)

  chapters/Chapter3_traits/figs/pca_loadings.tex:
    command: pca_loadings(pca_output, target_name)

# ---------- decomp figures ----------

  chapters/Chapter5_decomp/figs/raw_simulate_weibull.png:
    command: simulate_weibull()
    plot:
      width: 1000
      height: 980

  chapters/Chapter5_decomp/figs/mod_four.png:
    command: mod_plot_four(decay, w_sim_df, ne_sim_df, alphas, betas,
                         species_names = I(c('C', 'BB', 'CC', 'L')))
    plot:
      width: 1000
      height: 980

  chapters/Chapter5_decomp/figs/sigma_sp.png: 
    command: sigma_sp_plot(w_nocv_re, best_re_mod)
    plot: 
      width: 1000
      height: 800
      
  chapters/Chapter5_decomp/figs/a_plot.png:
    command: a_param_plot(a_post)
    plot:
      width: 1000
      height: 980

  chapters/Chapter5_decomp/figs/ab_cor_plot.png:
    command: kb_cor(a_post, b_post, I('alpha'))
    plot:
      width: 1000
      height: 980

  chapters/Chapter5_decomp/figs/kb_plot.png:
    command: kb_param_plot(k_post, b_post)
    plot:
      width: 1000
      height: 980

  chapters/Chapter5_decomp/figs/kb_cor_plot.png:
    command: kb_cor(k_post, b_post, I('kappa'))
    plot:
      width: 1000
      height: 980

# --------- decomp tables ---------

  chapters/Chapter5_decomp/figs/deviance_median.tex:
    command: deviance_trait_models(all_trait_models_median, target_name)

  chapters/Chapter5_decomp/figs/short_deviance_median.tex:
    command: deviance_trait_models(all_trait_models_median, 
                                 target_name, 
                                 short = I(TRUE))

# ------ report ---------

  thesis.tex:
    depends:
      - lab_data # carbon 
      - samples
      - OCD_mod
      - var_core
      - var_site
      - OCD_mod_simple
      - stock_data_site
      - stock  
      - spatial_stock
      - sites_only
      - spatial_sites
      - model_df
      - stock_covs
      - stock_mod
      - stock_mod_nore
      - cv_mod
      - raw_cl # traits
      - raw_lg
      - species 
      - carbon_nitrogen
      - economic_traits
      - tga_output
      - biomass_traits
      - combined_traits
      - mean_traits
      - logged_trait_matrix
      - pca_output
      - phylo_tree
      - phylo_trts
      - tga_params
      - decay # decomp
      - ne_cv_nore 
      - w_cv_nore
      - ne_nocv_re 
      - w_nocv_re
      - best_re_mod
      - ne_sim_df
      - w_sim_df
      - alphas
      - betas
      - a_post
      - b_post
      - k_post
      - all_trait_models_median
    knitr: TRUE
    cleanup_level: purge

  thesis.pdf:
    depends:
      - carbon_figs
      - traits_figs
      - traits_tables
      - decomp_figs
      - decomp_tables
    command: pdflatex('thesis.tex')
